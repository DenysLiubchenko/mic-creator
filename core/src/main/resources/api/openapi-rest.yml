openapi: 3.0.1
info:
  title: Retail API
  description: API for managing carts, products, and discounts in a retail system.
  version: 0.0.1

servers:
  - url: 'http://localhost:8085'

# TAGS
# =======================================================================================================================
tags:
  - name: Cart
    description: Endpoints related to cart operations, including creation, update, and product/discount management.
  - name: Product
    description: Endpoints for managing products in the system.
  - name: Discount
    description: Endpoints for managing discounts in the system.

# PATHS
# =======================================================================================================================
paths:
  /cart:
    post:
      tags:
        - Cart
      summary: Save cart
      operationId: saveCart
      description: Creation and saving of a new cart.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
      responses:
        '204':
          description: Cart successfully created and saved.
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'

  /cart/{cartId}:
    put:
      tags:
        - Cart
      summary: Update cart
      operationId: updateCart
      description: Updating an existing cart by its ID.
      parameters:
        - $ref: '#/components/parameters/CartId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
      responses:
        '204':
          description: Cart successfully updated.
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'

  /cart/{cartId}/products:
    patch:
      tags:
        - Cart
      summary: Add product to the cart
      operationId: addProductToCart
      description: Adds a product to the cart.
      parameters:
        - $ref: '#/components/parameters/CartId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductItem'
      responses:
        '204':
          description: Product successfully added to the cart.
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'

  /cart/{cartId}/products/remove:
    patch:
      tags:
        - Cart
      summary: Remove product from the cart
      operationId: removeProductFromCart
      description: Removes a product from the cart.
      parameters:
        - $ref: '#/components/parameters/CartId'
        - $ref: '#/components/parameters/ProductId'
      responses:
        '204':
          description: Product successfully removed from the cart.
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'

  /cart/{cartId}/discounts:
    patch:
      tags:
        - Cart
      summary: Add discount to the cart
      operationId: addDiscountToCart
      description: Adds a discount to the cart.
      parameters:
        - $ref: '#/components/parameters/CartId'
        - $ref: '#/components/parameters/DiscountCode'
      responses:
        '204':
          description: Discount successfully added to the cart.
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'

  /cart/{cartId}/discounts/remove:
    patch:
      tags:
        - Cart
      summary: Remove discount to the cart
      operationId: removeDiscountFromCart
      description: Removes a discount to the cart.
      parameters:
        - $ref: '#/components/parameters/CartId'
        - $ref: '#/components/parameters/DiscountCode'
      responses:
        '204':
          description: Discount successfully added to the cart.
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'

    delete:
      tags:
        - Cart
      summary: Delete cart
      operationId: deleteCart
      description: Deletes an existing cart by its ID.
      parameters:
        - $ref: '#/components/parameters/CartId'
      responses:
        '204':
          description: Cart successfully deleted.
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'

  /product:
    post:
      tags:
        - Product
      summary: Save product
      operationId: saveProduct
      description: Creation and saving of a new product.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '204':
          description: Product successfully created and saved.
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'

  /discount:
    post:
      tags:
        - Discount
      summary: Save discount
      operationId: saveDiscount
      description: Creation and saving of a new discount.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discount'
      responses:
        '204':
          description: Discount successfully created and saved.
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'

# COMPONENTS
# =======================================================================================================================
components:
  parameters:
    CartId:
      in: path
      name: cartId
      required: true
      schema:
        type: integer
        format: int64
        description: The unique identifier of the cart.
        minimum: 1
      example: 111

    ProductId:
      in: query
      name: productId
      required: true
      schema:
        type: integer
        format: int64
        description: The unique identifier of the product.
        minimum: 1
      example: 111

    DiscountCode:
      in: query
      name: code
      required: true
      schema:
        $ref: '#/components/schemas/DiscountItem'
      description: The discount code to be applied to the cart.
      example: 'F-2024'

  responses:
    NotFoundResponse:
      description: The requested resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorObject'
          example:
            status: 404
            title: Not Found
            detail: The requested resource was not found.

    ConflictResponse:
      description: The request could not be completed due to a conflict.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorObject'
          example:
            status: 409
            title: Conflict
            detail: The request has a conflict.

    BadRequestResponse:
      description: The request contains invalid data.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorObject'
          example:
            status: 400
            title: Bad Request
            detail: Invalid request. Please check the data.

  schemas:
    Cart:
      title: Cart
      description: Represents a shopping cart containing products and discounts.
      type: object
      properties:
        products:
          type: array
          description: List of products in the cart.
          nullable: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ProductItem'
          default: [ ]
        discounts:
          type: array
          description: List of discounts applied to the cart.
          nullable: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/DiscountItem'
          default: [ ]

    ProductItem:
      type: object
      description: Represents a product item in the cart.
      properties:
        productId:
          type: integer
          format: int64
          description: The unique identifier of the product.
          nullable: false
          minimum: 1
        quantity:
          type: integer
          format: int32
          description: The quantity of the product.
          nullable: false
          default: 1
          minimum: 1
      required:
        - productId

    DiscountItem:
      type: string
      description: A valid discount code to be applied to the cart.
      nullable: false
      minLength: 1
      pattern: "^\\S+$"

    Discount:
      type: object
      description: .
      properties:
        code:
          $ref: '#/components/schemas/DiscountItem'
        due:
          type: string
          format: date-time
          nullable: false
          description: "ISO 8601 date-time with offset for code to expire. Must be in the future."
      required:
        - code
        - due

    Product:
      type: object
      description: Represents a product that can be added to a cart.
      properties:
        name:
          type: string
          description: The name of the product.
          nullable: false
          minLength: 1
        cost:
          type: number
          format: bigDecimal
          description: The price of the product.
          nullable: false
          minimum: 1
      required:
        - name
        - cost

    ErrorObject:
      type: object
      description: Error response containing details about an exception.
      additionalProperties: false
      properties:
        status:
          type: integer
          description: HTTP status code.
          minimum: 100
          maximum: 599
        title:
          type: string
          description: Short description of the error.
          maxLength: 100
        detail:
          type: string
          description: Detailed message explaining the error.
